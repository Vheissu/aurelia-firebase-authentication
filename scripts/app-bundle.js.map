{"version":3,"sources":["app.ts","environment.ts","main.ts","resources/index.ts","C:/Code/aurelia-firebase-authentication/src/app.html"],"names":[],"mappings":";;IAEA;QACI,aACY,YAAoB,EACpB,SAAgB,EAChB,IAAW;YAJ3B,iBAkCC;YAhCO,4BAA4B,GAA5B,oBAA4B;YAC5B,yBAAwB,GAAxB,gBAAwB;YACxB,oBAAmB,GAAnB,WAAmB;YAFX,iBAAY,GAAZ,YAAY,CAAQ;YACpB,cAAS,GAAT,SAAS,CAAO;YAChB,SAAI,GAAJ,IAAI,CAAO;YAEnB,QAAQ,CAAC,IAAI,EAAE,CAAC,kBAAkB,CAAC,UAAA,IAAI;gBACnC,KAAI,CAAC,YAAY,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC;gBACxC,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACrB,CAAC,CAAC,CAAC;QACP,CAAC;QAED,mBAAK,GAAL;YAAA,iBAaC;YAZG,IAAI,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAEtD,QAAQ,CAAC,IAAI,EAAE,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,MAAW;gBACvD,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC;gBAC/C,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;gBACxB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAC7B,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,KAAK;gBACV,IAAI,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC;gBAC3B,IAAI,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;gBACjC,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;gBACxB,IAAI,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;YACtC,CAAC,CAAC,CAAC;QACP,CAAC;QAED,oBAAM,GAAN;YAAA,iBAMC;YALG,QAAQ,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;gBAC3B,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC9B,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,KAAK;gBACV,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;QACP,CAAC;QACL,UAAC;IAAD,CAlCA,AAkCC,IAAA;IAlCY,WAAG,MAkCf,CAAA;;;;;ICpCD;sBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;ICCI,OAAQ,CAAC,MAAM,CAAC;QACpB,eAAe,EAAE,qBAAW,CAAC,KAAK;QAClC,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAde,iBAAS,YAcxB,CAAA;;;;;ICvBD,mBAA0B,MAA8B;IAExD,CAAC;IAFe,iBAAS,YAExB,CAAA;;;ACJD","file":"app-bundle.js","sourcesContent":["declare var firebase;\n\nexport class App {\n    constructor(\n        private userLoggedIn = false,\n        private authToken = null,\n        private user = null\n    ) {\n        firebase.auth().onAuthStateChanged(user => {\n            this.userLoggedIn = user ? true : false;\n            this.user = user;\n        });\n    }\n\n    login() {\n        let provider = new firebase.auth.GoogleAuthProvider();\n\n        firebase.auth().signInWithPopup(provider).then((result: any) => {\n            this.authToken = result.credential.accessToken;\n            this.user = result.user;\n            this.userLoggedIn = true;\n        }).catch(error => {\n            let errorCode = error.code;\n            let errorMessage = error.message;\n            let email = error.email;\n            let credential = error.credential;\n        });\n    }\n\n    logout() {\n        firebase.auth().signOut().then(() => {\n            this.userLoggedIn = false;\n        }).catch(error => {\n            throw new Error(error);\n        });\n    }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null],"sourceRoot":"../src"}